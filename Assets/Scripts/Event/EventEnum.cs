
namespace act.evt
{
    /// <summary>
    /// 提供給不同模塊之間交互訊息，以降低偶合度。
    /// 事件分類以發送者的物件為依據，主要是各個Manager系統。
    /// </summary>
    public enum EventGroup : short
    {
        NONE = 0,
        INPUT,
        ENTITY,
        CAMERA,
        EFFECT,
        VFX,
        QTE,
        UI,
        NETWORK,
        LEVEL,
        EQUIP,
        BATTLE,
        SYSTEM,
        BUFF,
        TASK,
        CHAT,
        REALTIME_TALK
    }

    public enum InputEvent : short
    {
        NONE = 0,
        RECEIVE_KEY_DOWN,
        RECEIVE_KEY_UP,
        ANY_KEY,
        BUTTON_DOWN,
        INPUT_TRIGGER,
        AUTO_INPUT, // TODO: 應該不是在這個分類
        INPUT_DRAG_TRIGGER,
    }

    public enum BattleEvent : short
    {
        NONE = 0,
        BATTLE_CONNECT_SUCCESS,
        TRIGGER_MONSTER_DEBUT,
        BATTLE_ITEM_USE,
        BATTLE_ITEM_USE_SUCCESS,
        //角色发起伤害重新计算
        HERO_DAMAGE_RECAlC,
        //狂化状态伤害重算
        MONSTER_DAMAGE_INFLUENCE,
        TRIGGER_UI_EFFECT,
    }

    public enum EntityEvent : short
    {
        NONE = 0,

        COLLISION_ATTACK,
        COLLISION_PLAYER_ATTACK,
        COLLISION_BE_HIT,

        EE_VISIABLE,
        EE_INVISIABLE,

        HERO_BOUNCE_OFF,
        HERO_HITTED,
        HERO_BE_HIT,
        HERO_DEAD,
        HERO_DEAD_LOOP,
        HERO_DEAD_END,
        HERO_VERTIGO,
        HERO_VERTIGO_RECOVER,
        HERO_DEAF,
        HERO_DEAF_RECOVER,
        HERO_SLEEP,
        HERO_PARALYZED,
        HERO_PARALYZED_RECOVER,
        HERO_SWORD_ATTACK3_1_ENABLE,
        HERO_SWORD_ATTACK3_2_ENABLE,
        HERO_SWORD_ATTACK3_3_ENABLE,
        HERO_JUMP_ENABLE,
        HERO_CLIMB_ENABLE,
        HERO_ACTION_CHANGE,
        HERO_ACTION_LAYER_2_CHANGE,
        HERO_ACTION_ARMED,
        HERO_UPDATE_STATUS,
        HERO_UPDATE_AVATAR,
        HERO_UPDATE_POSTURE,//英雄切换架势
        HERO_UPDATE_ACTION_POINT,  //Action Point 切換
        HERO_CHARGE_FLAG,
        HERO_OUTOFBOUND_RECOVER,
        HERO_UPDATE_AVATAR_POSITION,
        HERO_QTE,
        HERO_USE_ITEM,
        HERO_CHANGE_HP,
        HERO_SKILL_KALLA_ENHANCE,

        MONSTER_LOGIC_HP_CHANGE,
        MONSTER_LOGIC_GET_DAMAGE,
        MONSTER_LOGIC_NEW_STATE_CODE,
        MONSTER_LOGIC_CLEAR_STATE_CODE,
        MONSTER_LOGIC_WILL_ENTER_PSIONIC,
        MONSTER_LOGIC_BODYPART_BROKE,
        MONSTER_NEW_ACTION,
        MONSTER_ACTION_END,
        MONSTER_ACTION_CHANGE,
        MONSTER_ENTER_ALERT,
        MONSTER_EXIT_ALERT,
        MONSTER_DEAD,
        MONSTER_SKILL_THUNDER,
        MONSTER_SKILL_INTERRUPT,
        MONSTER_PSIONIC_SHIELD_BROKE_EARLY,
        MONSTER_PSIONIC_SHIELD_BROKE_LATE,

        MONSTER_FALL_DOWN,

        MONSTER_GRAPHICS_NEW_ACTION,
        MONSTER_GRAPHICS_ACTION_END,
        MONSTER_GRAPHICS_ACTION_CHANGE,
        MONSTER_GRAPHICS_ANGRY_EXPLODE,
        MONSTER_GRAPHICS_FINALIZE_NETWORK,
        MONSTER_GRAPHICS_BODYPART_BROKE,

        DAMAGE_TEXT_MONSTER,//怪物伤害数字
        DAMAGE_TEXT_HERO,//英雄伤害数字

        ANIMATION_SET_BOOL,
        ANIMATION_SET_INT,
        ANIMATION_SET_FLOAT,
        ANIMATION_SET_TRIGGER,
        ANIMATION_SET_SPEED,

        TRIGGER_ACTION_EVENT,
        HERO_CLIMBING,
        BATTLE_END,				// <-- 缺少的定義 先新增在此 [zhiweiye]   
        MAIN_HERO_MOVE,

        HERO_BATTLE_STATE,
        ENTITY_BUFF_HITTED,
        ENTITY_LIFE_CHANGE,
    }

    public enum QteEvent : short
    {
        NONE = 0,
        TRIGGER,
        SUCCESS,
        FAILED,
    }

    public enum EquipEvent : short
    {
        FORGE_EQUIP,
        UPGRADE_EQUIP,
        INTENSIFY_EQUIP,
        RESOLVE_EQUIPMENT
    }

    public enum TaskEvent : short
    {
        REWARD_TASK_UPDATE
    }

    public enum CameraEvent : short
    {
        NONE = 0,
        ROTATE,
        CHANGE_STATE,
        CHANGE_PART,
        HIT_TARGET,
        TRIGGER_SLOPE,
    }

    public enum EffectEvent : short
    {
        NONE = 0,
        SHAKE_CAMERA,
        STOP_SHAKE_CAMERA,
    }

    public enum VfxEvent : short
    {
        NONE = 0,
        VFX_TRGGER_HUIXIN,
        VFX_LOAD_FINISH,
        VFX_BODY_PART_BROKEN,

		VFX_BOSS_ABSORB,
    }

    public enum UiEvent : short
    {
        NONE = 0,
        ENTER_STATE,
        EXIT_STATE,
        ENTER_ROOM,
        EXIT_ROOM,
        OPEN_QTE_UI,              //通过此消息关闭其他ui
        OPEN_BOSS_UI,             //通过此消息开关BOSSui
        MONSTER_HP_CHANGE,        //怪物扣血推送消息
        MONSTER_PSIONIC_CHANGE,   //怪物靈能累積推送消息
        //角色装备ui消息
        OPEN_PREVIEW_SET,//打开预览窗口
        CHANGE_EQUIP_SET,//装备切换ui刷新
        EQUIP_SET_CLICK_PANEL,//点击选择装备方案
        EQUIP_CLICK_ROLE_EQUIP,//点击玩家左侧的装备
        EQUIP_CLICK_BACKPACK_EQUIP,//点击玩家右侧的背包装备
        EQUIP_CLICK_BACKPACK_EQUIP_TAG,//点击玩家右侧的背包装备类型标签页。
        EQUIP_CHANGE_PART_UI,//玩家换装备，通过逻辑，去刷新ui.
        EQUIP_SET_UI,//玩家套装方案ui刷新

        // ----------------------------------------------------------------
        // 把非UI發出的事件整理移動到TEAM_EVENT列舉
        TEAM_CLICK_TASK,//点击TeamTask;
        TEAM_CLICK_LEVEL,//点击TeamLevel;
        TEAM_CLICK_LEVEL_ALL,//点击TeamLevel;
        TEAM_CLICK_ITEM,//TeamItem;
        TEAM_CLICK_SUBCLASS,//TeamItem;
        TEAM_BRIEF_REFRESH,
        TEAM_BRIEF_REFRESH_START_MATCHING,
        TEAM_BRIEF_REFRESH_STOP_MATCHING,
        TEAM_DETAIL_REFRESH_ALL,
        TEAM_CLOSE_TEAM_HALL,
        TEAM_HALL_REFRESH_MEMBER_INFO,
        TEAM_HALL_UPDATE_PREPARE_TIME,
        TEAM_CREATE_SUCCESSED,
        TEAM_CHANGE_SELF_DUTY,
        TEAM_CHANGE_DUTY_LIMIT,
        TEAM_CHANGE_WEAPON_LIMIT,
        TEAM_CHANGE_POWER_LIMIT,
        TEAM_CHANGE_LEVEL_LIMIT,
        TEAM_MEMBER_QUIT_PREPARE,
        TEAM_INVITE_MESSAGE_UI,
        TEAM_APPLICANTS_UPDATE_UI,
        TEAM_APPLICANTS_ADD,
        TEAM_CREATE_NEW_TEAM_OR_ENTER_TEAM,//新建或者加入队伍，新的teamid.
        TEAM_KICKED,//被踢出队伍.
        TEAM_MEMBER_CHANGE,//成员消息变化
        TEAM_MEMBER_ADD,//成员加入
        TEAM_MATCHING_CHANGE,//加入或者退出匹配时抛此消息，无参数
        // ----------------------------------------------------------------
        BACKPACK_CHANGE_TYPE,//切换背包按钮
        BACKPACK_ITEM_CLICK,//背包物品
        BACKPACK_ITEM_UPDATE,//背包数据更新
        BACKPACK_CHANGE_FILTER,//背包修改过滤条件
        //好友ui消息
        FRIEND_PANEL_CLICK,//点击切换好友面板按钮
        FRIEND_ADD_QUERY_REFRESH_AFTER_MSG,//添加好友界面，查询成功后，刷新
        FRIEND_DATA_CHANGE_REFRESH,//好友数据变化，刷新ui
        FRIEND_SET_WINDOWS_REFRESH,//好友设置窗口变化
        TOPUI_COIN_DIAMOND,
        TOPUI_TEAM_NOTICE,
        TRIGGER_EVENT,
        UIKEY_CLICK,
        TOPUI_MAIL_NOTICE,
        MAIL_CHANGE_LABEL,
        MAIL_CLICK_MAIL,
        MAIL_MAIL_ADD,
        MAIL_MAIL_DELETE,
        MAIL_MAIL_REFRESHAll,
        MAIL_MAIL_REFRESHMAILLIST,
        MAIL_RECEIVE_ANNEX,
        // 據點角色UI
        USER_ROLE_SELECT,
        USER_ROLE_QUERT_ROLE_INFO,
        USER_ROLE_CLOSE_UI,

    }

    public enum SystemEvent : short
    {
        TEAM_INFO_UPDATE,
    }

    public enum ChatEvent : short
    {
        // TODO: 把UI觸發的事件整理至UiEvent
        NONE = 0,
        CHAT_TOWN_ENTER, //主界面聊天入口
        CHAT_SHOW_PREVIOUS,
        CHAT_SHOW_NEXT,
        CHAT_OPEN_CHAT_WINDOW,
        CHAT_CHANGE_NEXT_CHANNEL,
        CHAT_SHOW_NEW_MSG,
        CHAT_CHANGE_CHANNEL,
        CHAT_UPDATE_CHANNEL_CONTENT,
        CHAT_CHOOSE_SYSTEM_ITEM,
        CHAT_CHOOSE_CHAT_ITEM,
        CHAT_RESUME_SLIDE_ITEM,
        CHAT_ITEM_SLIDE,
        CHAT_SYSTEM_ITEM_SET_TOP,
        CHAT_REMOVE_PRIVATE_CHAT,
        CHAT_PRIVATE_CHAT_SET_TOP,
        CHAT_UPDATE_TITLE_SYSTEM,
        CHAT_UPDATE_TITLE_PRIVATE_CHAT,
        CHAT_REMOVE_CURRENT_COMMUNICATE,
        CHAT_SELECT_ITEM_IN_INIT,
        CHAT_INPUT_MESSAGE,
        CHAT_CHANGE_CHAT_OBJECT,
        CHAT_INPUT_MODEL_CHANGE_POS,
        CHAT_INPUT_MODEL_CHANGE_SCALE,
        CHAT_EMOJI_ITEM_CLICK,
        CHAT_SHOW_EMOJI_BUTTON_CLICK,
        CHAT_RESUME_INPUT_MODULE_SLIDER,
        CHAT_SHIED_SETTING_BUTON_CLICK,
        CHAT_MAIN_VOICE_BUTTON_CLICK,
        CAHT_FRIEND_ENTER_PRIVATE,
        CAHT_SWITCH_CHAT_TO_RECRUIT,
        CHAT_APPLY_OR_JOIN_TEAM,
        CHAT_CURRENT_SELECT_NEW_MSG,

        // Logic
        RECEIVE_CHAT_MSG,
        CHAT_CHANNEL_CHANGE
    }

    public enum RealTalkEvent : short
    {
        INITIALIZE_RESULT,
        RECONNECT_STATE_CHANGE,
        JOIN_ROOM_RESULT,
        LEAVE_ROOM_RESULT,
        MIC_STATE_CHANGE,
        SPEAKER_STATE_CHANGE,
        CLOSE_TEAMMATE_VOICE
    }

    public enum NetworkEvent : int
    {
        NONE = 0,
        GAMEDATA_UPDATE = 1,
        NETWORK_BEGIN = 1000, //所有網路相關的enum開始標誌

        NETWORK_ERROR_MESSAGE = NETWORK_BEGIN + 1,

        #region network begin & end
        MSG_TYPE_LOGIC_CLIENT_BEGIN = 2000, //客户端逻辑消息开始     
        MSG_TYPE_LOGIC_CLIENT_END = 4799, //客户端逻辑消息结束
        #endregion

        #region Login
        CLIENT_LOGIN_BEGIN = MSG_TYPE_LOGIC_CLIENT_BEGIN,       //客户端与服务器通讯消息：登录流程消息开始标志 
        CLIENT_LOGIN_2_LS = CLIENT_LOGIN_BEGIN + 1,			//客户端向登录服务器请求登录消息(CLIENT->LS)
        CLIENT_LOGIN_2_LS_ERROR = CLIENT_LOGIN_BEGIN + 2,	//登录服务器返回登录失败消息(LS->CLIENT)
        CLIENT_LOGIN_RESPONSE = CLIENT_LOGIN_BEGIN + 3,		//登录回复(GS->CLIENT),(LS->CLIENT)
        CLIENT_LOGIN_LS_VALIDATE = CLIENT_LOGIN_BEGIN + 4,	//登录服务器通知客户端认证生效消息(LS->CLIENT)
        CLIENT_LOGIN_2_PS = CLIENT_LOGIN_BEGIN + 5,			//客户端向代理服务器请求登录消息(CLIENT->PS)
        CLIENT_USERINFO_REQUEST = CLIENT_LOGIN_BEGIN + 6,	//客户端请求玩家信息(CLIENT->GS)
        CLIENT_USERINFO_START = CLIENT_LOGIN_BEGIN + 7,		//游戏服务器通知客户端发送玩家信息开始(GS->CLIENT)
        CLIENT_USERINFO_FINISH = CLIENT_LOGIN_BEGIN + 8,    //游戏服务器通知客户端发送玩家信息完成(GS->CLIENT)
                                                            //CLIENT_LOGIN_SUCC = CLIENT_LOGIN_BEGIN + 9,		//客户端通知游戏服务器成功(客户端初始化完成)(CLIENT->GS)			<-- 正式
        CLIENT_CLIENTINITOVER_REQUEST = CLIENT_LOGIN_BEGIN + 9, //客户端通知游戏服务器客户端初始化完成(CLIENT->PS)		<-- 過去式
        CLIENT_SERVER_TIME_EVENT = CLIENT_LOGIN_BEGIN + 10,		//服务器时间
        CLIENT_LOGIN_2_GS_PREPARE_DATA = CLIENT_LOGIN_BEGIN + 11,   //通知客户端登录游戏服务器成功，数据准备中(GS->CLIENT) <-- 過去式
                                                                    //CLIENT_RELOGIN_REQUEST = CLIENT_LOGIN_BEGIN + 12,			//客户端向游戏服务器请求重登录消息(CLIENT->GS, GS->CLIENT)	<-- 正式
                                                                    //CLIENT_RELOGIN_RESPONSE = CLIENT_RELOGIN_REQUEST,			//客户端向游戏服务器请求重登录消息(CLIENT->GS, GS->CLIENT)	<-- 正式
        CLIENT_RELOGIN = CLIENT_LOGIN_BEGIN + 12,					//客户端向游戏服务器请求重登录消息(CLIENT->GS, GS->CLIENT)
        CLIENT_VALIDATECODE_EVENT = CLIENT_LOGIN_BEGIN + 13,        //游戏服务器向客户端发送用于重连的校验码，每次登录成功客户端请求玩家信息时以及重连成功时发送(GS->CLIENT)
        CLIENT_LOGOUT_REQUEST = CLIENT_LOGIN_BEGIN + 14,            //客户端向游戏服务器请求登出消息(CLIENT->GS)
        CLIENT_USER_INFO_PACK = CLIENT_LOGIN_BEGIN + 15,			//游戏服务器发送玩家信息（打包压缩）
        CLIENT_LOGIN_END = 2049, //客户端与服务器通讯消息：登录流程消息结束标志

        //客户端与服务器通讯消息：通用消息
        CLIENT_COMMON_BEGIN = MSG_TYPE_LOGIC_CLIENT_BEGIN + 50, //2050 客户端与服务器通讯消息：通用消息开始标志
        CLIENT_ACTIVE_REQUEST = CLIENT_COMMON_BEGIN + 1, //客户端激活包请求(CLIENT->GS) 
        CLIENT_ACTIVE_RESPONSE = CLIENT_COMMON_BEGIN + 2, //客户端激活包应答(GS->CLIENT) 
        CLIENT_ERROR_RETURN = CLIENT_COMMON_BEGIN + 3, //服务器返回错误码给客户端(GS->CLIENT)
        CLIENT_VERSION_VALID_REQUEST = CLIENT_COMMON_BEGIN + 4, //客户端请求游戏版本号(CLIENT->GS)
        CLIENT_VERSION_VALID_RESPONSE = CLIENT_COMMON_BEGIN + 5, //服务器回复游戏版本验证(GS->CLIENT)
        CLIENT_COMMON_END = MSG_TYPE_LOGIC_CLIENT_BEGIN + 99, //客户端与服务器通讯消息：通用消息结束标志
        #endregion

        #region Game
        //客户端与服务器通讯消息：业务逻辑(玩家相关)
        _MSG_CLIENT_USER_BEGIN = MSG_TYPE_LOGIC_CLIENT_BEGIN + 100, //客户端与服务器通讯消息：业务逻辑(玩家相关)开始标志
        _MSG_CLIENT_USER_INFO_EVENT = _MSG_CLIENT_USER_BEGIN + 3,	//玩家信息
        _MSG_CLIENT_USER_ATTR_EVENT = _MSG_CLIENT_USER_BEGIN + 4,	//玩家属性信息		// <-- 這個
        _MSG_CLIENT_QUERY_BUSINESS_INFO = _MSG_CLIENT_USER_BEGIN + 5,	//玩家具体业务信息查询
        _MSG_CLIENT_USER_RENAME_REQUEST = _MSG_CLIENT_USER_BEGIN + 8,   //修改玩家名称请求(CLIENT->GS)
        _MSG_CLIENT_USER_RENAME_RESPONSE = _MSG_CLIENT_USER_BEGIN + 9,	//修改玩家名称应答(GS->CLIENT)
        _MSG_CLIENT_USER_STR_ATTR_EVENT = _MSG_CLIENT_USER_BEGIN + 12,	//玩家字符串属性信息
        _MSG_CLIENT_USER_INFO_EX_EVENT = _MSG_CLIENT_USER_BEGIN + 15,	//玩家拓展信息		// <-- 這僤
        _MSG_CLIENT_USER_ATTR_EX_EVENT = _MSG_CLIENT_USER_BEGIN + 16,	//玩家拓展属性信息 // <-- 這個
        _MSG_CLIENT_ONLINE_USER_LST_REQUEST = _MSG_CLIENT_USER_BEGIN + 17,	//在线玩家列表请求
        _MSG_CLIENT_ONLINE_USER_LST_RESPONSE = _MSG_CLIENT_ONLINE_USER_LST_REQUEST, //在线玩家列表回复
        _MSG_CLIENT_USER_CHG_FIGHT_POSITION_REQUEST = _MSG_CLIENT_USER_BEGIN + 18,          //玩家改变战斗定位（攻防辅）请求
        _MSG_CLIENT_USER_CHG_FIGHT_POSITION_RESPONSE = _MSG_CLIENT_USER_CHG_FIGHT_POSITION_REQUEST, //玩家改变战斗定位回复
        _MSG_CLIENT_ONLINE_USER_LST = _MSG_CLIENT_USER_BEGIN + 19, //在线玩家

        _MSG_CLIENT_USER_QUERY_USER_DETAIL_INFO_REQUEST = _MSG_CLIENT_USER_BEGIN + 20, //查询玩家详情信息请求
        _MSG_CLIENT_USER_QUERY_USER_DETAIL_INFO_RESPONSE = _MSG_CLIENT_USER_BEGIN + 21, //查询玩家详情信息回复
        _MSG_CLIENT_USER_QUERY_USER_DETAIL_INFO = _MSG_CLIENT_USER_BEGIN + 22, //玩家详情信息
        _MSG_CLIENT_USER_QUERY_USER_REQUEST = _MSG_CLIENT_USER_BEGIN + 23, //查询玩家信息请求
        _MSG_CLIENT_USER_QUERY_USER_RESPONSE = _MSG_CLIENT_USER_BEGIN + 24, //查询玩家信息回复
        _MSG_CLIENT_USER_QUERY_USER_INFO = _MSG_CLIENT_USER_BEGIN + 25, //玩家信息
        /*
        CLIENT_USER_BEGIN = 2150, //客户端与服务器通讯消息：业务逻辑(玩家相关)开始标志 <-- 似乎正式是2100?
        CLIENT_NEW_USER_REQUEST = CLIENT_USER_BEGIN + 1,	//新建玩家请求(CLIENT->GS),(GS->US)
        CLIENT_NEW_USER_RESPONSE = CLIENT_USER_BEGIN + 2,	//新建玩家应答(CLIENT->GS),(GS->US)
        CLIENT_USER_INFO_EVENT = CLIENT_USER_BEGIN + 3,	//玩家信息
        CLIENT_USER_ATTR_EVENT = CLIENT_USER_BEGIN + 4,	//玩家属性信息
        CLIENT_ROOM_LIST = CLIENT_USER_BEGIN + 5,	//房间列表
        CLIENT_ROOM_ENTER_REQUEST = CLIENT_USER_BEGIN + 6,	//进入房间请求
        CLIENT_ROOM_ENTER_RESP = CLIENT_USER_BEGIN + 7,	//进入房间应答
        CLIENT_ROOM_EXIT_REQUEST = CLIENT_USER_BEGIN + 8,	//退出房间请求
        CLIENT_ROOM_EXIT_RESP = CLIENT_USER_BEGIN + 9,	//退出房间应答
        CLIENT_ROOM_USER_CHG_EVENT = CLIENT_USER_BEGIN + 12,	//玩家状态变化广播
        CLIENT_BATTLE_SERVER = CLIENT_USER_BEGIN + 13,	//发送战斗服务器相关信息
        CLIENT_CHG_EQUIPMENT_REQUEST = CLIENT_USER_BEGIN + 15,	//玩家更换装备请求(CLIENT->HS)
        CLIENT_CHG_EQUIPMENT_RESP = CLIENT_USER_BEGIN + 16, //玩家更换装备应答(HS->CLIENT)

        CLIENT_ROOM_LIST_REQUEST = 2168, // 向 Server 要隊伍資料
        CLIENT_MSG_COMMON_BROADCAST = 2169, //客戶端消息廣播(CLIENT->HS->CLIENT)
        */
        CLIENT_USER_BEGIN = 2150, //客户端与服务器通讯消息：业务逻辑(玩家相关)开始标志 <-- 似乎正式是2100?
        CLIENT_EQUIPMENT_RESP = CLIENT_USER_BEGIN + 14,	//玩家装备列表(HS->CLIENT) 
        _MSG_CLIENT_USER_END = MSG_TYPE_LOGIC_CLIENT_BEGIN + 199, //客户端与服务器通讯消息：业务逻辑(玩家相关)结束标志 

        #region 背包
        //@zz 背包道具消息开始
        //客户端与服务器通讯消息 背包装备系统
        _MSG_CLIENT_ITEM_BEGIN = MSG_TYPE_LOGIC_CLIENT_BEGIN + 200, //客户端与服务器通讯消息：背包装备开始标志
        _MSG_CLIENT_ITEM_INFO_LIST_EVENT = _MSG_CLIENT_ITEM_BEGIN + 1,  //普通道具下发消息
        _MSG_CLIENT_ITEM_INFO_CHG_EVENT = _MSG_CLIENT_ITEM_BEGIN + 2,  //普通道具有变化时下发消息
        _MSG_CLIENT_EQUIP_INFO_LIST_EVENT = _MSG_CLIENT_ITEM_BEGIN + 3,  //装备类道具下发消息
        _MSG_CLIENT_EQUIP_INFO_CHG_EVENT = _MSG_CLIENT_ITEM_BEGIN + 4,  //装备类道具有变化时下发消息
        _MSG_CLIENT_ITEM_USE_REQUEST = _MSG_CLIENT_ITEM_BEGIN + 5,  //普通道具使用请求消息
        _MSG_CLIENT_ITEM_USE_RESP = _MSG_CLIENT_ITEM_BEGIN + 6,  //普通道具使用应答应答
        _MSG_CLIENT_ITEM_SELL_REQUEST = _MSG_CLIENT_ITEM_BEGIN + 7,  //道具出售请求消息
        _MSG_CLIENT_ITEM_SELL_RESP = _MSG_CLIENT_ITEM_BEGIN + 8,  //道具出售应答应答
        _MSG_CLIENT_EQUIP_INFO_FORGE_REQUEST = _MSG_CLIENT_ITEM_BEGIN + 9,  //装备锻造请求消息
        _MSG_CLIENT_EQUIP_INFO_FORGE_RESP = _MSG_CLIENT_ITEM_BEGIN + 10, //装备锻造应答消息
        _MSG_CLIENT_EQUIP_INFO_ADVANCED_REQUEST = _MSG_CLIENT_ITEM_BEGIN + 11, //装备进阶请求消息
        _MSG_CLIENT_EQUIP_INFO_ADVANCED_RESP = _MSG_CLIENT_ITEM_BEGIN + 12, //装备进阶应答消息
        _MSG_CLIENT_EQUIP_INFO_UPGRADE_REQUEST = _MSG_CLIENT_ITEM_BEGIN + 13, //装备强化请求消息
        _MSG_CLIENT_EQUIP_INFO_UPGRADE_RESP = _MSG_CLIENT_ITEM_BEGIN + 14, //装备强化应答消息
        _MSG_CLIENT_EQUIP_INFO_RESOLVE_REQUEST = _MSG_CLIENT_ITEM_BEGIN + 15, //装备分解请求消息
        _MSG_CLIENT_EQUIP_INFO_RESOLVE_RESP = _MSG_CLIENT_ITEM_BEGIN + 16, //装备分解应答消息
        _MSG_CLIENT_EQUIP_INFO_RECAST_REQUEST = _MSG_CLIENT_ITEM_BEGIN + 17, //装备重铸请求消息
        _MSG_CLIENT_EQUIP_INFO_RECAST_RESP = _MSG_CLIENT_ITEM_BEGIN + 18, //装备重铸应答消息
        _MSG_CLIENT_EQUIP_SELL_REQUEST = _MSG_CLIENT_ITEM_BEGIN + 19, //装备出售请求
        _MSG_CLIENT_EQUIP_SELL_RESP = _MSG_CLIENT_ITEM_BEGIN + 20, //装备出售应答
        _MSG_CLIENT_ITEM_GEM_MOSAIC_REQUEST = _MSG_CLIENT_ITEM_BEGIN + 21, //装备镶嵌请求消息
        _MSG_CLIENT_ITEM_GEM_MOSAIC_RESP = _MSG_CLIENT_ITEM_BEGIN + 22, //装备镶嵌应答消息
        _MSG_CLIENT_ITEM_GEM_COMPOSE_REQUEST = _MSG_CLIENT_ITEM_BEGIN + 23, //宝石合成请求消息
        _MSG_CLIENT_ITEM_GEM_COMPOSE_RESP = _MSG_CLIENT_ITEM_BEGIN + 24, //宝石合成应答消息
        //_MSG_CLIENT_ITEM_INFO_CHG_EVEN				= _MSG_CLIENT_ITEM_BEGIN + 25, //战斗服务器道具变化消息 // <-- 目前Server已不用這消息號
        _MSG_CLIENT_PACKET_EXPAND_REQUEST = _MSG_CLIENT_ITEM_BEGIN + 25, //开背包格子请求
        _MSG_CLIENT_PACKET_EXPAND_RESP = _MSG_CLIENT_ITEM_BEGIN + 26, //开背包格子应答
        _MSG_CLIENT_EQUIP_INFO_OPERATION_REQUEST = _MSG_CLIENT_ITEM_BEGIN + 27, //装备操作请求
        _MSG_CLIENT_EQUIP_INFO_OPERATION_RESP = _MSG_CLIENT_ITEM_BEGIN + 28, //装备操作应答
        _MSG_CLIENT_EQUIPMENT_INFO_LIST_EVENT = _MSG_CLIENT_ITEM_BEGIN + 29, //玩家身上装备列表
        _MSG_CLIENT_EQUIPMENT_INFO_CHG_EVENT = _MSG_CLIENT_ITEM_BEGIN + 30, //玩家身上装备变化
        _MSG_CLIENT_CHG_EQUIPMENT_REQUEST = _MSG_CLIENT_ITEM_BEGIN + 31, //装备穿带操作请求
        _MSG_CLIENT_CHG_EQUIPMENT_RESP = _MSG_CLIENT_ITEM_BEGIN + 32, //装备穿带操作应答

        _MSG_CLIENT_ITEM_END = MSG_TYPE_LOGIC_CLIENT_BEGIN + 249,
        //@zz 背包道具消息结束
        #endregion

        // 客户端与服务器通讯消息：业务逻辑(任务相关)
        CLIENT_TASK_BEGIN = MSG_TYPE_LOGIC_CLIENT_BEGIN + 400,
        CLIENT_REWARD_TASK_INFO = CLIENT_TASK_BEGIN + 1, //悬赏任务列表 GS->CLIENT
        CLIENT_REWARD_TASK_CHG_EVENT = CLIENT_TASK_BEGIN + 2, //悬赏任务变更 GS->CLIENT
        CLIENT_REWARD_TASK_REFRESH_REQUEST = CLIENT_TASK_BEGIN + 3, //悬赏任务刷新请求 CLIENT->GS
        CLIENT_REWARD_TASK_REFRESH_RESP = CLIENT_TASK_BEGIN + 4, //悬赏任务刷新应答 GS->CLIENT
        CLIENT_REWARD_TASK_OPERATION_REQUEST = CLIENT_TASK_BEGIN + 5, //悬赏任务操作请求 CLIENT->GS
        CLIENT_REWARD_TASK_OPERATION_RESP = CLIENT_TASK_BEGIN + 6, //悬赏任务操作应答 GS->CLIENT
        CLIENT_REWARD_TASK_BUY_CELL_REQUEST = CLIENT_TASK_BEGIN + 7, //悬赏开任务格子请求 CLIENT->GS
        CLIENT_REWARD_TASK_BUY_CELL_RESP = CLIENT_TASK_BEGIN + 8, //悬赏开任务格子应答 GS->CLIENT
        CLIENT_REWARD_TASK_RESULT_RESP = CLIENT_TASK_BEGIN + 9,

        #region game to battle相關消息
        // 客户端与服务器通讯消息：业务逻辑(战斗流程相关)
        _MSG_CLIENT_BATTLE_BEGIN = MSG_TYPE_LOGIC_CLIENT_BEGIN + 350,
        _MSG_CLIENT_BATTLE_USER_CONNECT_BS_NOTIFY = _MSG_CLIENT_BATTLE_BEGIN + 1, //通知玩家连接战斗服务器 GS->CLIENT
        _MSG_CLIENT_BATTLE_JOIN_BATTLE_REQUEST = _MSG_CLIENT_BATTLE_BEGIN + 3, //加入战斗请求 CLIENT->BS，UDP连接
        _MSG_CLIENT_BATTLE_JOIN_BATTLE_RESPONSE = _MSG_CLIENT_BATTLE_BEGIN + 4, //加入战斗回复 BS->CLIENT
        _MSG_CLIENT_BATTLE_EXIT_BATTLE_REQUEST = _MSG_CLIENT_BATTLE_BEGIN + 5, //退出战斗请求，CLIENT->BS
        _MSG_CLIENT_BATTLE_EXIT_BATTLE_RESPONSE = _MSG_CLIENT_BATTLE_BEGIN + 6, //退出战斗回复，BS->CLIENT
        _MSG_CLIENT_BATTLE_START_BATTLE_FAIL = _MSG_CLIENT_BATTLE_BEGIN + 7, //开始战斗失败 GS->CLIENT
        _MSG_CLIENT_BATTLE_OVER_BATTLE = _MSG_CLIENT_BATTLE_BEGIN + 8, //战斗结束 GS->CLIENT

        MSG_CLIENT_STAGE_START_SUCC_NOTIFY = _MSG_CLIENT_BATTLE_BEGIN + 9, //战斗loading结束成功 BS->CLIENT
        MSG_CLIENT_STAGE_START_FAIL_NOTIFY = _MSG_CLIENT_BATTLE_BEGIN + 10, //战斗loading结束失败 BS->CLIENT
        _MSG_CLIENT_BATTLE_END = MSG_TYPE_LOGIC_CLIENT_BEGIN + 399,
        #endregion

        #region 組隊相關
        // 客户端与服务器通讯消息：业务逻辑(匹配相关)
        _MSG_CLIENT_MATCH_BEGIN = MSG_TYPE_LOGIC_CLIENT_BEGIN + 300, //2300#
        _MSG_CLIENT_MATCH_USER_MATCH_TEAM_REQUEST = _MSG_CLIENT_MATCH_BEGIN + 1,                    // 2301# 玩家匹配队伍 CLIENT->GS
        _MSG_CLIENT_MATCH_USER_MATCH_TEAM_RESPONSE = _MSG_CLIENT_MATCH_USER_MATCH_TEAM_REQUEST, // 2301# 玩家匹配队伍 GS->CLIENT
        _MSG_CLIENT_MATCH_USER_EXIT_MATCH_REQUEST = _MSG_CLIENT_MATCH_BEGIN + 2,                    // 2302# 玩家退出匹配 CLIENT->GS
        _MSG_CLIENT_MATCH_USER_EXIT_MATCH_RESPONSE = _MSG_CLIENT_MATCH_USER_EXIT_MATCH_REQUEST, // 2302# 玩家退出匹配 GS->CLIENT
        _MSG_CLIENT_MATCH_NOTIFY_USER_EXIT_MATCH = _MSG_CLIENT_MATCH_BEGIN + 3,                 // 2303# 通知玩家退出匹配 MS->GS GS->CLIENT

        // 客户端与服务器通讯消息：业务逻辑(组队相关)
        _MSG_CLIENT_TEAM_BEGIN = MSG_TYPE_LOGIC_CLIENT_BEGIN + 450,    //2450#

        _MSG_CLIENT_TEAM_CREATE_TEAM_REQUEST = _MSG_CLIENT_TEAM_BEGIN + 1,				// 2451# 创建队伍 CLIENT->GS
        _MSG_CLIENT_TEAM_CREATE_TEAM_RESPONSE = _MSG_CLIENT_TEAM_CREATE_TEAM_REQUEST,		// 2451# 创建队伍 GS->CLIENT
        _MSG_CLIENT_TEAM_JOIN_TEAM_REQUEST = _MSG_CLIENT_TEAM_BEGIN + 2,				// 2452# 加入队伍 CLIENT->GS
        _MSG_CLIENT_TEAM_JOIN_TEAM_RESPONSE = _MSG_CLIENT_TEAM_JOIN_TEAM_REQUEST,		// 2452# 加入队伍 GS->CLIENT
        _MSG_CLIENT_TEAM_TEAM_LIST_REQUEST = _MSG_CLIENT_TEAM_BEGIN + 3,				// 2453# 队伍列表 CLIENT->GS
        _MSG_CLIENT_TEAM_TEAM_LIST_RESPONSE = _MSG_CLIENT_TEAM_TEAM_LIST_REQUEST,		// 2453# 队伍列表 GS->CLIENT
        _MSG_CLIENT_TEAM_TEAM_LIST = _MSG_CLIENT_TEAM_BEGIN + 4,				// 2454# 队伍列表 GS->CLIENT
        _MSG_CLIENT_TEAM_APPLY_TEAM_REQUEST = _MSG_CLIENT_TEAM_BEGIN + 5,				// 2455# 申请队伍 CLIENT->GS
        _MSG_CLIENT_TEAM_APPLY_TEAM_RESPONSE = _MSG_CLIENT_TEAM_APPLY_TEAM_REQUEST,		// 2455# 申请队伍 GS->CLIENT
        _MSG_CLIENT_TEAM_EXIT_TEAM_REQUEST = _MSG_CLIENT_TEAM_BEGIN + 6,				// 2456# 退出队伍 CLIENT->GS
        _MSG_CLIENT_TEAM_EXIT_TEAM_RESPONSE = _MSG_CLIENT_TEAM_EXIT_TEAM_REQUEST,		// 2456# 退出队伍 GS->CLIENT
        _MSG_CLIENT_TEAM_KICK_MEMBER_REQUEST = _MSG_CLIENT_TEAM_BEGIN + 7,				// 2457# 踢出玩家 GS->CLIENT
        _MSG_CLIENT_TEAM_KICK_MEMBER_RESPONSE = _MSG_CLIENT_TEAM_KICK_MEMBER_REQUEST,		// 2457# 踢出玩家 GS->CLIENT

        _MSG_CLIENT_TEAM_APPLY_LIST_REQUEST = _MSG_CLIENT_TEAM_BEGIN + 8,                // 2458# 队伍申请列表 CLIENT->GS
        _MSG_CLIENT_TEAM_APPLY_LIST_RESPONSE = _MSG_CLIENT_TEAM_APPLY_LIST_REQUEST,       // 2458# 队伍申请列表 GS->CLIENT
        _MSG_CLIENT_TEAM_APPLY_LIST = _MSG_CLIENT_TEAM_BEGIN + 9,                // 2459# 队伍申请列表 GS->CLIENT
        _MSG_CLIENT_TEAM_AGREE_APPLY_REQUEST = _MSG_CLIENT_TEAM_BEGIN + 10,				 // 2460# 同意玩家申请 CLIENT->GS
        _MSG_CLIENT_TEAM_AGREE_APPLY_RESPONSE = _MSG_CLIENT_TEAM_AGREE_APPLY_REQUEST,      // 2460# 同意玩家申请 GS->CLIENT
        _MSG_CLIENT_TEAM_CLEAR_APPLY_LIST_REQUEST = _MSG_CLIENT_TEAM_BEGIN + 11,               // 2461# 清空玩家申请列表 CLIENT->GS
        _MSG_CLIENT_TEAM_CLEAR_APPLY_LIST_RESPONSE = _MSG_CLIENT_TEAM_CLEAR_APPLY_LIST_REQUEST, // 2461# 清空玩家申请列表 GS->CLIENT
        _MSG_CLIENT_TEAM_MEMBER_LIST_REQUEST = _MSG_CLIENT_TEAM_BEGIN + 12,               // 2462# 队伍成员列表 CLIENT->GS
        _MSG_CLIENT_TEAM_MEMBER_LIST_RESPONSE = _MSG_CLIENT_TEAM_MEMBER_LIST_REQUEST,      // 2462# 队伍成员列表 GS->CLIENT
        _MSG_CLIENT_TEAM_MEMBER_LIST = _MSG_CLIENT_TEAM_BEGIN + 13,               // 2463# 队伍成员列表 GS->CLIENT

        _MSG_CLIENT_TEAM_TEAM_TARGET_SETTING_REQUEST = _MSG_CLIENT_TEAM_BEGIN + 14,                       // 2464# 队伍目标设置 CLIENT->GS
        _MSG_CLIENT_TEAM_TEAM_TARGET_SETTING_RESPONSE = _MSG_CLIENT_TEAM_TEAM_TARGET_SETTING_REQUEST,		 // 2464# 队伍目标设置 GS->CLIENT
        _MSG_CLIENT_TEAM_RECRUIT_SETTING_REQUEST = _MSG_CLIENT_TEAM_BEGIN + 15,                       // 2465# 队伍招募条件设置 CLIENT->GS
        _MSG_CLIENT_TEAM_RECRUIT_SETTING_RESPONSE = _MSG_CLIENT_TEAM_RECRUIT_SETTING_REQUEST,          // 2465# 队伍招募条件设置 GS->CLIENT
        _MSG_CLIENT_TEAM_TEAM_TYPE_SETTING_REQUEST = _MSG_CLIENT_TEAM_BEGIN + 16,                       // 2466# 公開/非公開
        _MSG_CLIENT_TEAM_TEAM_TYPE_SETTING_RESPONSE = _MSG_CLIENT_TEAM_TEAM_TYPE_SETTING_REQUEST,        // 2466# 沒註解
        _MSG_CLIENT_TEAM_AUTO_AGREE_APPLY_SETTING_REQUEST = _MSG_CLIENT_TEAM_BEGIN + 17,                       // 2467# 队伍设置是否自动同意申请 CLIENT->GS
        _MSG_CLIENT_TEAM_AUTO_AGREE_APPLY_SETTING_RESPONSE = _MSG_CLIENT_TEAM_AUTO_AGREE_APPLY_SETTING_REQUEST, // 2467# 队伍设置是否自动同意申请 GS->CLIENT

        _MSG_CLIENT_TEAM_LEADER_DEMISE_REQUEST = _MSG_CLIENT_TEAM_BEGIN + 18,                      // 2468# 队长让位 CLIENT->GS
        _MSG_CLIENT_TEAM_LEADER_DEMISE_RESPONSE = _MSG_CLIENT_TEAM_LEADER_DEMISE_REQUEST,           // 2468# 队长让位 GS->CLIENT
        _MSG_CLIENT_TEAM_USER_INVITE_REQUEST = _MSG_CLIENT_TEAM_BEGIN + 19,                      // 2469# 邀请玩家进队
        _MSG_CLIENT_TEAM_USER_INVITE_RESPONSE = _MSG_CLIENT_TEAM_USER_INVITE_REQUEST,             // 2469#
        _MSG_CLIENT_TEAM_ACCEPT_INVITE_REQUEST = _MSG_CLIENT_TEAM_BEGIN + 20,                      // 2470# 接受邀请
        _MSG_CLIENT_TEAM_ACCEPT_INVITE_RESPONSE = _MSG_CLIENT_TEAM_ACCEPT_INVITE_REQUEST,           // 2470# 
        _MSG_CLIENT_TEAM_REFUSE_INVITE_REQUEST = _MSG_CLIENT_TEAM_BEGIN + 21,                      // 2471# 拒绝邀请
        _MSG_CLIENT_TEAM_REFUSE_INVITE_RESPONSE = _MSG_CLIENT_TEAM_REFUSE_INVITE_REQUEST,           // 2471#
        _MSG_CLIENT_TEAM_NOTIFY_INVITE_INFO = _MSG_CLIENT_TEAM_BEGIN + 22,                      // 2472# 邀请信息
        _MSG_CLIENT_TEAM_NOTIFY_REFUSE_INVITE = _MSG_CLIENT_TEAM_BEGIN + 23,                      // 2473# 通知邀请者，被邀请拒绝
        _MSG_CLIENT_TEAM_USER_TEAM_INFO = _MSG_CLIENT_TEAM_BEGIN + 24,                      // 2474# 玩家的基本队伍信息

        _MSG_CLIENT_TEAM_BROADCAST_ADD_MEMBER_INFO = _MSG_CLIENT_TEAM_BEGIN + 25,						// 2475# 给队伍中的玩家广播增加成员信息
        _MSG_CLIENT_TEAM_BROADCAST_DEL_MEMBER_INFO = _MSG_CLIENT_TEAM_BEGIN + 26,						// 2476# 给队伍中的玩家广播删除成员信息
        _MSG_CLIENT_TEAM_BROADCAST_CHG_LEADER_INFO = _MSG_CLIENT_TEAM_BEGIN + 27,						// 2477# 给队伍中的玩家广播更换队长信息
        _MSG_CLIENT_TEAM_BROADCAST_MEMBER_UPDATE_STATUS = _MSG_CLIENT_TEAM_BEGIN + 28,						// 2478# 给队伍中的玩家广播成员在线/离线状态
        _MSG_CLIENT_TEAM_BROADCAST_MEMBER_PREPARE_BATTLE = _MSG_CLIENT_TEAM_BEGIN + 29,                     // 2479# 给队伍中的玩家广播准备战斗 MS->GS GS->CLIENT

        _MSG_CLIENT_TEAM_AGREE_PREPARE_BATTLE_REQUEST = _MSG_CLIENT_TEAM_BEGIN + 30,						// 2480# 玩家同意准备战斗请求 CLIENT->GS
        _MSG_CLIENT_TEAM_AGREE_PREPARE_BATTLE_RESPONSE = _MSG_CLIENT_TEAM_AGREE_PREPARE_BATTLE_REQUEST,	// 2480# 玩家同意准备战斗回复
        _MSG_CLIENT_TEAM_CANCEL_PREPARE_BATTLE_REQUEST = _MSG_CLIENT_TEAM_BEGIN + 31,						// 2481# 玩家取消准备战斗请求 CLIENT->GS
        _MSG_CLIENT_TEAM_CANCEL_PREPARE_BATTLE_RESPONSE = _MSG_CLIENT_TEAM_CANCEL_PREPARE_BATTLE_REQUEST,	// 2481# 玩家取消准备战斗回复

        _MSG_CLIENT_TEAM_BROADCAST_MEMBER_AGREE_PREPARE_BATTLE = _MSG_CLIENT_TEAM_BEGIN + 32,				// 2482# 给队伍中的玩家广播队友同意准备战斗 MS->GS GS->CLIENT
        _MSG_CLIENT_TEAM_BROADCAST_MEMBER_CANCEL_PREPARE_BATTLE = _MSG_CLIENT_TEAM_BEGIN + 33,				// 2483# 给队伍中的玩家广播队友取消准备战斗 MS->GS GS->CLIENT
        _MSG_CLIENT_TEAM_BROADCAST_MEMBER_PREPARE_BATTLE_TIMEOUT = _MSG_CLIENT_TEAM_BEGIN + 34,				// 2484# 给队伍中的玩家广播战斗准备超时 MS->GS GS->CLIENT
        _MSG_CLIENT_TEAM_NOTIFY_LEADER_APPLY_LST_CHG = _MSG_CLIENT_TEAM_BEGIN + 35,              // 2485# 通知队长申请列表有变化

        _MSG_CLIENT_TEAM_SELF_TEAM_INFO_REQUEST = _MSG_CLIENT_TEAM_BEGIN + 36,                      // 2486# 玩家自己的队伍信息请求 CLIENT->GS
        _MSG_CLIENT_TEAM_SELF_TEAM_INFO_RESPONSE = _MSG_CLIENT_TEAM_SELF_TEAM_INFO_REQUEST,         // 2486# 玩家自己的队伍信息回复 MS->GS GS->CLIENT
        _MSG_CLIENT_TEAM_REWARD_TASK_TEAM_LIST_REQUEST = _MSG_CLIENT_TEAM_BEGIN + 37,                       // 2487# 悬赏队伍列表请求
        _MSG_CLIENT_TEAM_REWARD_TASK_TEAM_LIST_RESPONSE = _MSG_CLIENT_TEAM_REWARD_TASK_TEAM_LIST_REQUEST,   // 2487# 悬赏队伍列表回复
        _MSG_CLIENT_TEAM_REWARD_TASK_TEAM_LIST = _MSG_CLIENT_TEAM_BEGIN + 38,                       // 2488# 悬赏队伍列表

        _MSG_CLIENT_TEAM_END = NetworkEvent.MSG_TYPE_LOGIC_CLIENT_BEGIN + 549,  // 2549#
        #endregion

		// 客户端与服务器通讯消息：业务逻辑(聊天相关)
        _MSG_CLIENT_CHAT_BEGIN = MSG_TYPE_LOGIC_CLIENT_BEGIN + 550,
        _MSG_CLIENT_CHAT_REQUEST = _MSG_CLIENT_CHAT_BEGIN + 1, //聊天请求 GS->CLIENT PM命令用
        _MSG_CLIENT_CHAT_RESPONSE = _MSG_CLIENT_CHAT_BEGIN + 2, //聊天请求回复 CLIENT->GS PM命令用
        _MSG_CLIENT_CHAT_INFO = _MSG_CLIENT_CHAT_BEGIN + 3, //聊天信息 PM命令用
        _MSG_CLIENT_GET_WORLDCHAT = _MSG_CLIENT_CHAT_BEGIN + 4, //世界聊天内容请求
        _MSG_CLIENT_CHAT_CHANNEL_SEND_CHAT_REQUEST = _MSG_CLIENT_CHAT_BEGIN + 5,
        _MSG_CLIENT_CHAT_CHANNEL_SEND_CHAT_RESPONSE = _MSG_CLIENT_CHAT_BEGIN + 6,
        _MSG_CLIENT_CHAT_CHANNEL_SEND_PRIVATE_CHAT_REQUEST = _MSG_CLIENT_CHAT_BEGIN + 7,
        _MSG_CLIENT_CHAT_CHANNEL_SEND_PRIVATE_CHAT_RESPONSE = _MSG_CLIENT_CHAT_BEGIN + 8,
        _MSG_CLIENT_CHAT_CHANNEL_PRIVATE_CHAT_INFO = _MSG_CLIENT_CHAT_BEGIN + 9, //server 
        _MSG_CLIENT_CHAT_CHANNEL_CHAT_RECORD_LST_REQUEST = _MSG_CLIENT_CHAT_BEGIN + 10,
        _MSG_CLIENT_CHAT_CHANNEL_CHAT_RECORD_LST_RESPONSE = _MSG_CLIENT_CHAT_BEGIN + 11,
        _MSG_CLIENT_CHAT_CHANNEL_CHAT_RECORD_LST = _MSG_CLIENT_CHAT_BEGIN + 12,
        _MSG_CLIENT_CHAT_CHANNEL_PRIVATE_CHAT_RECORD_LST_REQUEST = _MSG_CLIENT_CHAT_BEGIN + 13,
        _MSG_CLIENT_CHAT_CHANNEL_PRIVATE_CHAT_RECORD_LST_RESPONSE = _MSG_CLIENT_CHAT_BEGIN + 14,
        _MSG_CLIENT_CHAT_CHANNEL_PRIVATE_CHAT_RECORD_LST = _MSG_CLIENT_CHAT_BEGIN + 15,
        _MSG_CLIENT_CHAT_CHANNEL_LATEST_CHAT_RECORD_REQUEST = _MSG_CLIENT_CHAT_BEGIN + 16,
        _MSG_CLIENT_CHAT_CHANNEL_LATEST_CHAT_RECORD_RESPONSE = _MSG_CLIENT_CHAT_BEGIN + 17,
        _MSG_CLIENT_CHAT_CHANNEL_LATEST_CHAT_RECORD_LST = _MSG_CLIENT_CHAT_BEGIN + 18,

        _MSG_CLIENT_CHAT_END = 2539, // <-- 似乎正式是2299?

        #region 據點顯示角色
        // 客户端与服务器通讯消息：业务逻辑(玩家角色相关)
        _MSG_CLIENT_USER_ROLE_BEGIN = MSG_TYPE_LOGIC_CLIENT_BEGIN + 800,
        _MSG_CLIENT_USER_ROLE_POS_INFO_EVENT = _MSG_CLIENT_USER_ROLE_BEGIN + 1, //据点信息 GS->CLIENT
        _MSG_CLIENT_USER_ROLE_SYNC_POS_INFO = _MSG_CLIENT_USER_ROLE_BEGIN + 2, //同步角色在据点的位置 CLIENT->GS
        _MSG_CLIENT_USER_ROLE_POS_INFO_NOTIFY = _MSG_CLIENT_USER_ROLE_BEGIN + 3, //位置信息更新通知 SS->CLIENT
        _MSG_CLIENT_USER_ROLE_ENTER_VIEW_NOTIFY = _MSG_CLIENT_USER_ROLE_BEGIN + 4, //进入视野通知 SS->CLIENT
        _MSG_CLIENT_USER_ROLE_LEAVE_VIEW_NOTIFY = _MSG_CLIENT_USER_ROLE_BEGIN + 5, //离开视野通知 SS->CLIENT
        _MSG_CLIENT_USER_ROLE_EQUIPMENT_CHG_NOTIFY = _MSG_CLIENT_USER_ROLE_BEGIN + 6, //装备改变通知 SS->CLIENT
        _MSG_CLIENT_USER_ROLE_ATTR_EVENT_CHG_NOTIFY = _MSG_CLIENT_USER_ROLE_BEGIN + 7, //基本属性改变通知 SS->CLIENT
        _MSG_CLIENT_USER_ROLE_STR_ATTR_EVENT_CHG_NOTIFY = _MSG_CLIENT_USER_ROLE_BEGIN + 8, //字符串属性改变通知 SS->CLIENT
        _MSG_CLIENT_USER_ROLE_ANIMATOR_PARAM_UPDATE = _MSG_CLIENT_USER_ROLE_BEGIN + 9, //玩家Animator动画组件：表现Blend融合参数 CLIENT->SS

        _MSG_CLIENT_USER_ROLE_END = MSG_TYPE_LOGIC_CLIENT_BEGIN + 829,
        #endregion

        //字典表重载相关
        _MSG_CLIENT_RELOAD_DICT_BEGIN = MSG_TYPE_LOGIC_CLIENT_BEGIN + 830,
        _MSG_CLIENT_RELOAD_DICT_BY_PM_RESPONSE = _MSG_CLIENT_RELOAD_DICT_BEGIN + 1,


        _MSG_CLIENT_RELOAD_DICT_END = MSG_TYPE_LOGIC_CLIENT_BEGIN + 849,

        #region ㄧ般任務
        // 客户端与服务器通讯消息：业务逻辑(任务相关)
        _MSG_CLIENT_TASK_BEGIN = MSG_TYPE_LOGIC_CLIENT_BEGIN + 850,
        _MSG_CLIENT_TASK_LIST_EVENT = _MSG_CLIENT_TASK_BEGIN + 1, //任务列表 GS->CLIENT
        _MSG_CLIENT_TASK_UPDATE_EVENT = _MSG_CLIENT_TASK_BEGIN + 2, //任务更新 GS->CLIENT
        _MSG_CLIENT_TASK_ACCEPT_BY_NPC_REQUEST = _MSG_CLIENT_TASK_BEGIN + 3, //接取NPC任务请求 CLIENT->GS
        _MSG_CLIENT_TASK_ACCEPT_BY_NPC_RESPONSE = _MSG_CLIENT_TASK_BEGIN + 4, //接取NPC任务回复 GS->CLIENT
        _MSG_CLIENT_TASK_FINISH_REQUEST = _MSG_CLIENT_TASK_BEGIN + 5, //完成任务请求 CLIENT->GS
        _MSG_CLIENT_TASK_FINISH_RESPONSE = _MSG_CLIENT_TASK_BEGIN + 6, //完成任务回复 GS->CLIENT
        _MSG_CLIENT_TASK_START_BATTLE_REQUEST = _MSG_CLIENT_TASK_BEGIN + 7, //任务开始战斗请求 CLIENT->GS
        _MSG_CLIENT_TASK_START_BATTLE_RESPONSE = _MSG_CLIENT_TASK_BEGIN + 8, //任务开始战斗回复 GS->CLIENT
        _MSG_CLIENT_TASK_BATTLE_RESULT = _MSG_CLIENT_TASK_BEGIN + 9, //任务关卡战斗结算 GS->CLIENT
        _MSG_CLIENT_TASK_CONTROL_INTERACT_REQUEST = _MSG_CLIENT_TASK_BEGIN + 10, //控件交互请求 CLIENT->GS
        _MSG_CLIENT_TASK_CONTROL_INTERACT_RESPONSE = _MSG_CLIENT_TASK_BEGIN + 11, //控件交互回复 GS->CLIENT


        _MSG_CLIENT_TASK_END = MSG_TYPE_LOGIC_CLIENT_BEGIN + 889,
        #endregion

        #region 探險相關
        // 客户端与服务器通讯消息：业务逻辑(探险相关)
        _MSG_CLIENT_ADVENTURE_BEGIN = MSG_TYPE_LOGIC_CLIENT_BEGIN + 890,
        _MSG_CLIENT_ADVENTURE_CHAPTER_LIST_EVENT = _MSG_CLIENT_ADVENTURE_BEGIN + 1, //探险章节列表 GS->CLIENT
        _MSG_CLIENT_ADVENTURE_STAGE_LIST_EVENT = _MSG_CLIENT_ADVENTURE_BEGIN + 2, //探险关卡列表 GS->CLIENT
        _MSG_CLIENT_ADVENTURE_CHAPTER_UPDATE_EVENT = _MSG_CLIENT_ADVENTURE_BEGIN + 3, //探险章节更新 CLIENT->GS
        _MSG_CLIENT_ADVENTURE_STAGE_UPDATE_EVENT = _MSG_CLIENT_ADVENTURE_BEGIN + 4, //探险关卡更新 GS->CLIENT
        _MSG_CLIENT_ADVENTURE_START_BATTLE_REQUEST = _MSG_CLIENT_ADVENTURE_BEGIN + 5, //探险开始战斗请求 CLIENT->GS
        _MSG_CLIENT_ADVENTURE_START_BATTLE_RESPONSE = _MSG_CLIENT_ADVENTURE_BEGIN + 6, //探险开始战斗回复 GS->CLIENT
        _MSG_CLIENT_ADVENTURE_QUERY_RANK_REQUEST = _MSG_CLIENT_ADVENTURE_BEGIN + 7, //查询关卡排行请求 CLIENT->GS
        _MSG_CLIENT_ADVENTURE_QUERY_RANK_RESPONSE = _MSG_CLIENT_ADVENTURE_BEGIN + 8, //查询关卡排行回复 GS->CLIENT
        _MSG_CLIENT_ADVENTURE_RANK_INFO = _MSG_CLIENT_ADVENTURE_BEGIN + 9, //关卡排行信息 GS->CLIENT
        _MSG_CLIENT_ADVENTURE_BATTLE_SUCC_INFO = _MSG_CLIENT_ADVENTURE_BEGIN + 10, //探险战斗成功信息（关卡成功界面） GS->CLIENT
        _MSG_CLIENT_ADVENTURE_BATTLE_FAIL_INFO = _MSG_CLIENT_ADVENTURE_BEGIN + 11, //探险战斗失败信息（关卡失败界面） GS->CLIENT
        _MSG_CLIENT_ADVENTURE_BATTLE_SETTLEMENT_INFO = _MSG_CLIENT_ADVENTURE_BEGIN + 12, //探险战斗结算信息 GS->CLIENT
        _MSG_CLIENT_ADVENTURE_CHAPTER_SSS_REWARD_REQUEST = _MSG_CLIENT_ADVENTURE_BEGIN + 13, //探险章节SSS奖励领取请求 CLIENT->GS
        _MSG_CLIENT_ADVENTURE_CHAPTER_SSS_REWARD_RESPONSE = _MSG_CLIENT_ADVENTURE_BEGIN + 14, //探险章节SSS奖励领取请求 GS->CLIENT


        _MSG_CLIENT_ADVENTURE_END = MSG_TYPE_LOGIC_CLIENT_BEGIN + 919,
        #endregion

        // 客户端与服务器通讯消息：业务逻辑(公告相关)
        _MSG_CLIENT_NOTICE_BEGIN = MSG_TYPE_LOGIC_CLIENT_BEGIN + 920,
        _MSG_CLIENT_NOTICE = _MSG_CLIENT_NOTICE_BEGIN + 1, //通知
        _MSG_CLIENT_NOTICE_END = MSG_TYPE_LOGIC_CLIENT_BEGIN + 939,

        #region 好友系統
        // 客户端与服务器通讯消息：业务逻辑(好友相关)
        _MSG_CLIENT_FRIEND_BEGIN = MSG_TYPE_LOGIC_CLIENT_BEGIN + 940,
        _MSG_CLIENT_FRIEND_APPLY_FRIEND_REQUEST = _MSG_CLIENT_FRIEND_BEGIN + 1, //申请好友请求
        _MSG_CLIENT_FRIEND_APPLY_FRIEND_RESPONSE = _MSG_CLIENT_FRIEND_BEGIN + 2, //申请好友回复
        _MSG_CLIENT_FRIEND_AGREE_FRIEND_APPLY_REQUEST = _MSG_CLIENT_FRIEND_BEGIN + 3, //同意好友申请请求
        _MSG_CLIENT_FRIEND_AGREE_FRIEND_APPLY_RESPONSE = _MSG_CLIENT_FRIEND_BEGIN + 4, //同意好友申请回复
        _MSG_CLIENT_FRIEND_DELETE_FRIEND_REQUEST = _MSG_CLIENT_FRIEND_BEGIN + 5, //删除好友请求
        _MSG_CLIENT_FRIEND_DELETE_FRIEND_RESPONSE = _MSG_CLIENT_FRIEND_BEGIN + 6, //删除好友回复
        _MSG_CLIENT_FRIEND_RECOMMEND_FRIEND_REQUEST = _MSG_CLIENT_FRIEND_BEGIN + 7, //推荐好友请求
        _MSG_CLIENT_FRIEND_RECOMMEND_FRIEND_RESPONSE = _MSG_CLIENT_FRIEND_BEGIN + 8, //推荐好友回复
        _MSG_CLIENT_FRIEND_RECOMMEND_FRIEND_LIST = _MSG_CLIENT_FRIEND_BEGIN + 9, //推荐好友列表
        _MSG_CLIENT_FRIEND_SET_FRIEND_STAR_REQUEST = _MSG_CLIENT_FRIEND_BEGIN + 10, //星标好友设置请求
        _MSG_CLIENT_FRIEND_SET_FRIEND_STAR_RESPONSE = _MSG_CLIENT_FRIEND_BEGIN + 11, //标好友设置回复
        _MSG_CLIENT_FRIEND_SET_OPTION_LIST_REQUEST = _MSG_CLIENT_FRIEND_BEGIN + 12, //设置好友选项列表请求
        _MSG_CLIENT_FRIEND_SET_OPTION_LIST_RESPONSE = _MSG_CLIENT_FRIEND_BEGIN + 13, //设置好友选项列表回复
        _MSG_CLIENT_FRIEND_SET_OPTION_SET_REQUEST = _MSG_CLIENT_FRIEND_BEGIN + 14, //好友选项设置请求
        _MSG_CLIENT_FRIEND_SET_OPTION_SET_RESPONSE = _MSG_CLIENT_FRIEND_BEGIN + 15, //好友选项设置回复
        _MSG_CLIENT_FRIEND_FRIEND_LIST_REQUEST = _MSG_CLIENT_FRIEND_BEGIN + 16, //好友列表请求
        _MSG_CLIENT_FRIEND_FRIEND_LIST_RESPONSE = _MSG_CLIENT_FRIEND_BEGIN + 17, //好友列表回复
        _MSG_CLIENT_FRIEND_FRIEND_LIST = _MSG_CLIENT_FRIEND_BEGIN + 18, //好友列表
        _MSG_CLIENT_FRIEND_BLACK_LIST_SET_REQUEST = _MSG_CLIENT_FRIEND_BEGIN + 19, //黑名单设置请求
        _MSG_CLIENT_FRIEND_BLACK_LIST_SET_RESPONSE = _MSG_CLIENT_FRIEND_BEGIN + 20, //黑名单设置回复
        _MSG_CLIENT_FRIEND_BLACK_LIST = _MSG_CLIENT_FRIEND_BEGIN + 21, //黑名单列表
        _MSG_CLIENT_FRIEND_BLACK_LIST_REQUEST = _MSG_CLIENT_FRIEND_BEGIN + 22, //黑名单列表请求
        _MSG_CLIENT_FRIEND_BLACK_LIST_RESPONSE = _MSG_CLIENT_FRIEND_BEGIN + 23, //黑名单列表回复
        _MSG_CLIENT_FRIEND_APPLY_LIST_REQUEST = _MSG_CLIENT_FRIEND_BEGIN + 24, //申请好友列表请求
        _MSG_CLIENT_FRIEND_APPLY_LIST_RESPONSE = _MSG_CLIENT_FRIEND_BEGIN + 25, //申请好友列表回复
        _MSG_CLIENT_FRIEND_APPLY_LIST = _MSG_CLIENT_FRIEND_BEGIN + 26, //申请好友列表
        _MSG_CLIENT_FRIEND_DELETE_FRIEND_APPLY_REQUEST = _MSG_CLIENT_FRIEND_BEGIN + 27, //删除好友申请请求
        _MSG_CLIENT_FRIEND_DELETE_FRIEND_APPLY_RESPONSE = _MSG_CLIENT_FRIEND_BEGIN + 28, //删除好友申请回复

        _MSG_CLIENT_FRIEND_BE_BLACKLISTED_DATA_LIST = _MSG_CLIENT_FRIEND_BEGIN + 29, //被加入黑名单玩家ID数据列表
        _MSG_CLIENT_FRIEND_BE_BLACKLISTED_DATA_DEL = _MSG_CLIENT_FRIEND_BEGIN + 30, //被加入黑名单玩家ID数据删除
        _MSG_CLIENT_FRIEND_FRIEND_DATA_LIST = _MSG_CLIENT_FRIEND_BEGIN + 31, //好友数据列表
        _MSG_CLIENT_FRIEND_FRIEND_DATA_DEL = _MSG_CLIENT_FRIEND_BEGIN + 32, //好友数据删除
        _MSG_CLIENT_FRIEND_FRIEND_UPDATE = _MSG_CLIENT_FRIEND_BEGIN + 33, //好友更新
        _MSG_CLIENT_FRIEND_LAST_TEAM_LST_REQUEST = _MSG_CLIENT_FRIEND_BEGIN + 34, //最近队友列表请求
        _MSG_CLIENT_FRIEND_LAST_TEAM_LST_RESPONSE = _MSG_CLIENT_FRIEND_BEGIN + 35, //最近队友列表回复
        _MSG_CLIENT_FRIEND_LAST_TEAM_LST = _MSG_CLIENT_FRIEND_BEGIN + 36, //最近队友列表
        _MSG_CLIENT_FRIEND_SET_OPTION_LIST = _MSG_CLIENT_FRIEND_BEGIN + 37, //设置好友选项列表
        _MSG_CLIENT_FRIEND_APPLY_UPDATE = _MSG_CLIENT_FRIEND_BEGIN + 38, //好友申请更新
        _MSG_CLIENT_FRIEND_GET_FRIEND_DATA_REQUEST = _MSG_CLIENT_FRIEND_BEGIN + 39, //請求好友數據
        _MSG_CLIENT_FRIEND_GET_FRIEND_DATA_RESPONSE = _MSG_CLIENT_FRIEND_BEGIN + 40, //好友數據回復
        _MSG_CLIENT_FRIEND_CHANNEL_PRIVATE_USER_INFO_REQUEST = _MSG_CLIENT_CHAT_BEGIN + 41, //私聊频道玩家信息请求
        _MSG_CLIENT_FRIEND_CHANNEL_PRIVATE_USER_INFO_RESPONSE = _MSG_CLIENT_CHAT_BEGIN + 42, //私聊频道玩家信息回复
        _MSG_CLIENT_FRIEND_APPLY_DATA_LIST = _MSG_CLIENT_CHAT_BEGIN + 43, //申请好友数据列表
        _MSG_CLIENT_FRIEND_APPLY_DATA_DEL = _MSG_CLIENT_CHAT_BEGIN + 44, //申请好友数据删除

        _MSG_CLIENT_FRIEND_END = MSG_TYPE_LOGIC_CLIENT_BEGIN + 1049,
        #endregion

        #region 郵件系統
        // 客户端与服务器通讯消息：业务逻辑(邮件相关)
        _MSG_CLIENT_EMAIL_BEGIN = MSG_TYPE_LOGIC_CLIENT_BEGIN + 1050,
        _MSG_CLIENT_EMAIL_UNREAD_COUNT_REQUEST = _MSG_CLIENT_EMAIL_BEGIN + 1,   //邮件未读总数请求 Client->ES
        _MSG_CLIENT_EMAIL_UNREAD_COUNT_UPDATE = _MSG_CLIENT_EMAIL_BEGIN + 2,    //邮件未读总数更新 ES->Client
        _MSG_CLIENT_EMAIL_LIST_REQUEST = _MSG_CLIENT_EMAIL_BEGIN + 3,   //邮件列表请求 Client->ES
        _MSG_CLIENT_EMAIL_LIST_RESPONSE = _MSG_CLIENT_EMAIL_BEGIN + 4,  //邮件列表回复 ES->Client
        _MSG_CLIENT_EMAIL_DETAILS_UPDATE = _MSG_CLIENT_EMAIL_BEGIN + 5, //邮件详情内容更新 ES->Client
        _MSG_CLIENT_EMAIL_DETAILS_UPDATE_FEEDBACK = _MSG_CLIENT_EMAIL_BEGIN + 6,    //邮件详情内容更新反馈 Client->ES
        _MSG_CLIENT_EMAIL_DEL_GAIN_REQUEST = _MSG_CLIENT_EMAIL_BEGIN + 7,   //邮件删除（领取）请求 Client->ES
        _MSG_CLIENT_EMAIL_DEL_GAIN_RESPONSE = _MSG_CLIENT_EMAIL_BEGIN + 8,  //邮件删除（领取）回复 ES->Client
        _MSG_CLIENT_EMAIL_ATTACHMENT_DROP_EVENT = _MSG_CLIENT_EMAIL_BEGIN + 9,  //邮件附件掉落（领取） GS->Client

        _MSG_CLIENT_EMAIL_END = MSG_TYPE_LOGIC_CLIENT_BEGIN + 1099,
        #endregion

        #region 商店
        // 客户端与服务器通讯消息：业务逻辑(商店相关)
        _MSG_CLIENT_SHOP_BEGIN = MSG_TYPE_LOGIC_CLIENT_BEGIN + 1100,
        _MSG_CLIENT_SHOP_SHOPITEM_LIST_REQUEST = _MSG_CLIENT_SHOP_BEGIN + 1,    //商店商品列表请求
        _MSG_CLIENT_SHOP_SHOPITEM_LIST_RESPONSE = _MSG_CLIENT_SHOP_BEGIN + 2,   //商店商品列表回复
        _MSG_CLIENT_SHOP_UPDATE_EVENT = _MSG_CLIENT_SHOP_BEGIN + 3, //商店更新
        _MSG_CLIENT_SHOP_BUY_REQUEST = _MSG_CLIENT_SHOP_BEGIN + 4,  //商店购买请求
        _MSG_CLIENT_SHOP_BUY_RESPONSE = _MSG_CLIENT_SHOP_BEGIN + 5, //商店购买回复
        _MSG_CLIENT_SHOP_SELL_REQUEST = _MSG_CLIENT_SHOP_BEGIN + 6, //商店出售请求
        _MSG_CLIENT_SHOP_SELL_RESPONSE = _MSG_CLIENT_SHOP_BEGIN + 7,    //商店出售回复
        _MSG_CLIENT_SHOP_REFRESH_REQUEST = _MSG_CLIENT_SHOP_BEGIN + 8,  //商店刷新请求
        _MSG_CLIENT_SHOP_REFRESH_RESPONSE = _MSG_CLIENT_SHOP_BEGIN + 9, //商店刷新回复

        _MSG_CLIENT_SHOP_END = MSG_TYPE_LOGIC_CLIENT_BEGIN + 1199,
        #endregion

        #endregion

        #region Battle

        #region 戰場新版封包
        // 客户端与服务器通讯消息：业务逻辑(战斗指令相关)
        _MSG_CLIENT_BATTLE_ACTION_BEGIN = MSG_TYPE_LOGIC_CLIENT_BEGIN + 600,
        _MSG_CLIENT_BATTLE_PING_TIME_REQUEST = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 1, //请求战场时间
        _MSG_CLIENT_BATTLE_PING_TIME_RESPONSE = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 2, //请求战场时间回复
        _MSG_CLIENT_BATTLE_USER_BASIC_STATE_UPDATE = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 3, //玩家基础状态同步：位置、朝向、速度与动作表现
        _MSG_CLIENT_BATTLE_STAGE_USER_LIST_NOTIFY = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 4, //关卡数据：玩家列表
        _MSG_CLIENT_BATTLE_USER_BEHIT_EVENT = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 5, //玩家被击中
        _MSG_CLIENT_BATTLE_STAGE_MONSTER_LIST_NOTIFY = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 6, //关卡数据：怪物列表
        _MSG_CLIENT_BATTLE_MONSTER_POSITION_UPDATE = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 7, //怪物位置
        _MSG_CLIENT_BATTLE_MONSTER_STATE_UPDATE = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 8, //怪物状态
        _MSG_CLIENT_BATTLE_MONSTER_BEHIT_EVENT = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 9, //怪物被击中
        _MSG_CLIENT_BATTLE_MONSTER_SKILL_EVENT = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 10, //怪物技能
        _MSG_CLIENT_BATTLE_MONSTER_ANIMATOR_WEIGHT_UPDATE = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 11, //Animator动画组件：控制怪物动画表现权重指数
        _MSG_CLIENT_BATTLE_MONSTER_ANIMATOR_PARAM_UPDATE = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 12, //Animator动画组件：表现Blend融合参数
        _MSG_CLIENT_BATTLE_MONSTER_ANIMATOR_ACTION_UPDATE = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 13, //Animator动画组件：播放动作ID
        _MSG_CLIENT_BATTLE_BUFF_ATTACH_EVENT = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 14, //buff挂载
        _MSG_CLIENT_BATTLE_BUFF_DETACH_EVENT = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 15, //buff移除
        _MSG_CLIENT_BATTLE_BUFF_EFFECT_SHOW_EVENT = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 16, //buff效果：表现
        _MSG_CLIENT_BATTLE_BUFF_EFFECT_USE_EVENT = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 17, //buff效果：生效
        _MSG_CLIENT_BATTLE_BATTLE_BEGIN_TIME_NOTIFY = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 18, //战场开始时间通知：意味着可以开始战斗
        _MSG_CLIENT_BATTLE_STAGE_SELF_INFO_NOTIFY = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 19, //关卡数据：玩家自己的战场相关消息
        _MSG_CLIENT_BATTLE_USER_BUFF_INFO_LIST_NOTIFY = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 20, //玩家buff信息列表通知
        _MSG_CLIENT_BATTLE_USER_EFFECT_INFO_LIST_NOTIFY = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 21, //玩家buff效果信息列表通知
        _MSG_CLIENT_BATTLE_MONSTER_BUFF_INFO_LIST_NOTIFY = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 22, //怪物buff信息列表通知
        _MSG_CLIENT_BATTLE_MONSTER_EFFECT_INFO_LIST_NOTIFY = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 23, //怪物buff效果信息列表通知
        _MSG_CLIENT_BATTLE_USER_ITEM_LIST_NOTIFY = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 24, //玩家物品列表通知
        _MSG_CLIENT_BATTLE_GOAL_LIST_NOTIFY = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 25, //关卡目标表 B->C
        _MSG_CLIENT_BATTLE_GOAL_UPDATE_NOTIFY = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 26, //关卡目标更新 B->C
        _MSG_CLIENT_BATTLE_RESULT_NOTIFY = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 27, //关卡结算
        _MSG_CLIENT_BATTLE_CLIENT_HOST_NOTIFY = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 28, //客户端主机通知
        _MSG_CLIENT_BATTLE_MONSTER_ACCUM_ALTER_UPDATE = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 29, //怪物累加状态变更：受击后
        _MSG_CLIENT_BATTLE_USER_LEAVE_BATTLE_NOTIFY = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 30, //玩家离开战斗
        _MSG_CLIENT_BATTLE_USER_DIE_EVENT_REQUEST = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 31, //玩家死亡
        _MSG_CLIENT_BATTLE_MONSTER_PART_DESTROY_EVENT = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 32, //怪物部位破坏
        _MSG_CLIENT_BATTLE_USER_USE_ITEM_EVENT = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 33, //战场内玩家使用物品
        _MSG_CLIENT_BATTLE_USER_SPECIFY_ITEM_UPDATE = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 34, //玩家指定物品信息更新
        _MSG_CLIENT_BATTLE_USER_DYNAMIC_STATE_UPDATE = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 35, //玩家动态状态同步：血量、能量
        _MSG_CLIENT_BATTLE_MONSTER_DYNAMIC_STATE_UPDATE = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 36, //怪物动态状态同步：血量、能量
        _MSG_CLIENT_BATTLE_USER_ANIMATOR_PARAM_UPDATE = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 37, //角色animator blend所需參數
        _MSG_CLIENT_BATTLE_STAGE_INTERACTIVE_LIST_NOTIFY = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 38, //可破坏物件列表
        _MSG_CLIENT_BATTLE_INTERACTIVE_ADD = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 39, //增加可破坏物件
        _MSG_CLIENT_BATTLE_INTERACTIVE_DEL = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 40, //删除可破坏物件
        _MSG_CLIENT_BATTLE_INTERACTIVE_UPDATE = _MSG_CLIENT_BATTLE_ACTION_BEGIN + 41, //可破坏物件更新

        _MSG_CLIENT_BATTLE_ACTION_END = MSG_TYPE_LOGIC_CLIENT_BEGIN + 799,
        #endregion


        NETWORK_BATTLE_BEGIN = 5000,

        NETWORK_BATTLE_CONNECT_BEGIN = 5001,
        NETWORK_BATTLE_CONNECTING = NETWORK_BATTLE_CONNECT_BEGIN,
        NETWORK_BATTLE_CONNECT = NETWORK_BATTLE_CONNECT_BEGIN + 1,
        NETWORK_BATTLE_DISCONNECT = NETWORK_BATTLE_CONNECT_BEGIN + 2,
        NETWORK_BATTLE_RECV = NETWORK_BATTLE_CONNECT_BEGIN + 3,
        NETWORK_BATTLE_CONNECT_END = 5099,

        NETWORK_BATTLE_KCP_BEGIN = 5100,

        NETWORK_BATTLE_SYNC_MONSTER_MOVE = NETWORK_BATTLE_KCP_BEGIN + 5,//怪物移動
        NETWORK_BATTLE_SYNC_TURN_PATH_RESP = NETWORK_BATTLE_KCP_BEGIN + 8,//怪物位移路徑

        //id段还没更到最新
        //关卡目标表
        NETWORK_CLIENT_BATTLE_GOAL_LIST = NETWORK_BATTLE_KCP_BEGIN + 25,
        //关卡目标更新
        NETWORK_CLIENT_BATTLE_GOAL_UPDATE = NETWORK_BATTLE_KCP_BEGIN + 26,


        NETWORK_BATTLE_MONSTER_SKILL_BROADCAST = 5200,
        NETWORK_BATTLE_MONSTER_SKILL_BEGIN_REQUEST = NETWORK_BATTLE_MONSTER_SKILL_BROADCAST + 2,
        NETWORK_BATTLE_MONSTER_SKILL_END_REQUEST = NETWORK_BATTLE_MONSTER_SKILL_BROADCAST + 3,


        NETWORK_BATTLE_KCP_END = 6999,

        NETWORK_BATTLE_UDP_BEGIN = 7000,
        NETWORK_BATTLE_UDP_END = 8999,

        NETWORK_BATTLE_END = 9000,
        #endregion

        SIMULATECONNECT_BEGIN = 9100,

        SIMULATECONNECT_SEND = SIMULATECONNECT_BEGIN + 1,
        SIMULATECONNECT_RECEIVE = SIMULATECONNECT_BEGIN + 2,
        SIMULATECONNECT_HAS_PROCESSED = SIMULATECONNECT_BEGIN + 3,
        SIMULATECONNECT_PROCESSING = SIMULATECONNECT_BEGIN + 4,

        TEST_REQUEST = SIMULATECONNECT_BEGIN + 5,
        TEST_RESPONSE = SIMULATECONNECT_BEGIN + 6,
        TEST_ATK = SIMULATECONNECT_BEGIN + 7,
        SIMULATECONNECT_HAS_PROCESSED_BATTLE = SIMULATECONNECT_BEGIN + 8,

        TEST_FRAM_EMPTY = 100,// EET_SIMULATECONNECT_BEGIN + 8,
        TEST_FRAM_MOVE = 101,// EET_SIMULATECONNECT_BEGIN + 8,
        TEST_FRAM_ATK = 102,// EET_SIMULATECONNECT_BEGIN + 8,

        SIMULATECONNECT_END = 9150,

        NETWORK_END = 9900,
    }

    public enum LevelEvent : short
    {
        LE_LEVEL_START,
        LE_QUEST_STATE_CHANGE,
        LE_PLAYER_FINDWAYTO,
        LE_TRIGGER_NPC,
        LE_TRIGGER_ZONE,
        LE_BACK,
        LE_UPDATE_TIME,
        LE_ENABLE_BATTLE_ENTRY,
        LE_BATTLE_END,
        LE_UIKEY_ACTIVE,
        LE_DISABLE_CONTROLL,
    }

    public enum BuffEvent : short
    {
        NONE,
        UPDATE,
        DESTROY_PART,
        SKILL_HITTED,
        SKILL_CAST,
        CRIT_SUCC,
        DODGE_SUCC,
        DAMAGE_INFO,
    }
}